{"version":3,"file":"project.js","sources":["../source/types.ts","../source/install.ts","../source/project.ts"],"sourcesContent":["export enum Command {\n    project = 'project'\n}\n\nexport enum Project {\n    phpLaravel = 'php-laravel'\n}\n\nexport enum Result {\n    createdProject = 'Created Project',\n    ignored = 'Ignored'\n}\n\nexport enum Prefix {\n    vamtigerProject = 'vamtiger-project'\n}\n\nexport enum StringConstant {\n    dash = '-'\n}\n\nexport enum ProjectOptions {\n    type = 'type',\n    name = 'name'\n}\n\nexport enum Interface {\n    'api' = 'API',\n    'cli' = 'CLI'\n}\n\nexport interface IProject {\n    type: Project;\n    name: string;\n    project?: string;\n    destination?: string;\n    cli?: boolean;\n}\n\nexport interface IInstall {\n    project: string;\n}\n\nexport function ignore(params: any) {\n    return Result.ignored;\n}\n\nexport const errorMessage = {\n    noProjectTypeOptionSpecified: `No --${ProjectOptions.type} option specified (e.g. ${Prefix.vamtigerProject} ${Command.project} --${ProjectOptions.type} ${Project.phpLaravel} --${ProjectOptions.name} projec-name)`,\n    noProjectNameOptionSpecified: `No --${ProjectOptions.name} option specified (e.g. ${Prefix.vamtigerProject} ${Command.project} --${ProjectOptions.type} ${Project.phpLaravel} --${ProjectOptions.name} projec-name)`\n};","import npm = require('npm');\nconst devnull = require('dev-null');\nimport {\n    IInstall\n} from './types';\n\nconst loadParams = {\n    loglevel: 'silent',\n    progress: false\n};\n\nexport default function (params: IInstall) {return new Promise((resolve, reject) => {\n    const { project } = params;\n\n    npm.load(loadParams, (error, loadData) => {\n        if (error) {\n            reject(error);\n        } else {\n            npm.commands.install([project], (error, installData) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve({\n                        loadData,\n                        installData\n                    });\n                }\n            });\n        }\n    });\n})}","import {copy} from 'vamtiger-copy';\nimport {\n    IProject,\n    Project,\n    Prefix,\n    StringConstant,\n    Result,\n    ignore\n} from './types';\nimport install from './install';\n\nconst createProject = {\n    [Project.phpLaravel]: createPhpLaravelProject\n}\n\nexport default async function (params: IProject) {\n    const createCurrentProject = createProject[params.type] || ignore;\n    const project = [\n        Prefix.vamtigerProject,\n        params.type\n    ].join(StringConstant.dash);\n    const installParams = createCurrentProject && { project };\n\n    if (installParams) {\n        await install(installParams);\n    }\n\n    return createCurrentProject({...params, project});\n}\n\nasync function createPhpLaravelProject(params: IProject) {\n    const {\n        project,\n        destination = process.cwd(),\n        cli = false\n    } = params;\n    const { path: source } = project && require(project)\n        || { path: '' };\n    const copyParams = {\n        source,\n        destination\n    }\n\n    await copy(copyParams);\n\n    if (cli) {\n        console.log(Result.createdProject);\n    }\n\n    return Result.createdProject;\n}"],"names":["Command","Project","Result","Prefix","StringConstant","ProjectOptions","Interface","ignore","params","ignored","errorMessage","noProjectTypeOptionSpecified","type","vamtigerProject","project","phpLaravel","name","noProjectNameOptionSpecified","devnull","require","loadParams","loglevel","progress","Promise","resolve","reject","npm","load","error","loadData","commands","install","installData","createProject","[object Object]","createPhpLaravelProject","async","createCurrentProject","join","dash","installParams","destination","process","cwd","cli","path","source","copyParams","copy","console","log","createdProject"],"mappings":"iBAAYA,QAIAC,QAIAC,OAKAC,OAIAC,eAIAC,eAKAC,gDAiBZ,SAAgBC,OAAOC,GACnB,OAAON,OAAOO,SA5ClB,SAAYT,GACRA,oBADJ,CAAYA,UAAAA,aAIZ,SAAYC,GACRA,2BADJ,CAAYA,UAAAA,aAIZ,SAAYC,GACRA,mCACAA,oBAFJ,CAAYA,SAAAA,YAKZ,SAAYC,GACRA,qCADJ,CAAYA,SAAAA,YAIZ,SAAYC,GACRA,WADJ,CAAYA,iBAAAA,oBAIZ,SAAYC,GACRA,cACAA,cAFJ,CAAYA,iBAAAA,oBAKZ,SAAYC,GACRA,YACAA,YAFJ,CAAYA,YAAAA,eAqBZ,MAAaI,cACTC,qCAAsCN,eAAeO,+BAA+BT,OAAOU,mBAAmBb,QAAQc,aAAaT,eAAeO,QAAQX,QAAQc,gBAAgBV,eAAeW,oBACjMC,qCAAsCZ,eAAeW,+BAA+Bb,OAAOU,mBAAmBb,QAAQc,aAAaT,eAAeO,QAAQX,QAAQc,gBAAgBV,eAAeW,qBChD/LE,QAAUC,QAAQ,YAKlBC,YACFC,SAAU,SACVC,UAAU,GAGd,iBAAyBd,GAAmB,OAAO,IAAIe,QAAQ,CAACC,EAASC,KACrE,MAAMX,QAAEA,GAAYN,EAEpBkB,IAAIC,KAAKP,WAAY,CAACQ,EAAOC,KACrBD,EACAH,EAAOG,GAEPF,IAAII,SAASC,SAASjB,GAAU,CAACc,EAAOI,KAChCJ,EACAH,EAAOG,GAEPJ,GACIK,SAAAA,EACAG,YAAAA,UCbxB,MAAMC,eACFC,CAACjC,QAAQc,YAAaoB,yBAG1BC,uBAA+B5B,GAC3B,MAAM6B,EAAuBJ,cAAczB,EAAOI,OAASL,OACrDO,GACFX,OAAOU,gBACPL,EAAOI,MACT0B,KAAKlC,eAAemC,MAChBC,EAAgBH,IAA0BvB,QAAAA,GAMhD,OAJI0B,SACMT,QAAQS,GAGXH,iCAAyB7B,IAAQM,QAAAA,KAG5CsB,eAAeD,wBAAwB3B,GACnC,MAAMM,QACFA,EAAO2B,YACPA,EAAcC,QAAQC,MAAKC,IAC3BA,GAAM,GACNpC,GACIqC,KAAMC,GAAWhC,GAAWK,QAAQL,KACnC+B,KAAM,IACTE,GACFD,OAAAA,EACAL,YAAAA,GASJ,aANMO,kBAAKD,GAEPH,GACAK,QAAQC,IAAIhD,OAAOiD,gBAGhBjD,OAAOiD"}